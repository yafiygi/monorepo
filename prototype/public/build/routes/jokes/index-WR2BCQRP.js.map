{
  "version": 3,
  "sources": ["empty-module:~/utils/db.server", "empty-module:~/utils/session.server", "browser-route-module:/home/nilcy/codebase/prototype/app/routes/jokes/index.tsx?browser", "../../../../app/routes/jokes/index.tsx"],
  "sourcesContent": ["module.exports = {};", "module.exports = {};", "export { CatchBoundary, ErrorBoundary, default } from \"/home/nilcy/codebase/prototype/app/routes/jokes/index.tsx\";", "import type { LoaderFunction } from \"remix\";\nimport { useLoaderData, Link, useCatch } from \"remix\";\nimport type { Joke } from \"@prisma/client\";\nimport { db } from \"~/utils/db.server\";\nimport { getUserId } from \"~/utils/session.server\";\n\ntype LoaderData = { randomJoke: Joke };\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  let userId = await getUserId(request);\n\n  // this isn't how you should do it, but the proper way was not working\n  // in production... I think it's fly's fault actually...\n  let jokes = userId\n    ? await db.joke.findMany({\n        where: { jokesterId: userId },\n      })\n    : [];\n  let randomJoke = jokes[Math.floor(Math.random() * jokes.length)];\n\n  // Here's the proper way:\n  /*\n  const count = userId\n    ? await db.joke.count({ where: { jokesterId: userId } })\n    : 0;\n  let randomRowNumber = Math.floor(Math.random() * count);\n  let [randomJoke] =\n    count > 0 && userId\n      ? await db.joke.findMany({\n          take: 1,\n          skip: randomRowNumber,\n          where: { jokesterId: userId },\n        })\n      : [];\n  */\n\n  if (!randomJoke) {\n    throw new Response(\"No random joke found\", { status: 404 });\n  }\n  let data: LoaderData = { randomJoke };\n  return data;\n};\n\nexport default function JokesIndexRoute() {\n  let data = useLoaderData<LoaderData>();\n\n  return (\n    <div>\n      <p>Here's a random joke:</p>\n      <p>{data.randomJoke.content}</p>\n      <Link to={data.randomJoke.id}>\"{data.randomJoke.name}\" Permalink</Link>\n    </div>\n  );\n}\n\nexport function CatchBoundary() {\n  let caught = useCatch();\n\n  if (caught.status === 404) {\n    return (\n      <div className=\"error-container\">\n        <p>There are no jokes to display.</p>\n        <Link to=\"new\">Add your own</Link>\n      </div>\n    );\n  }\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  return <div className=\"error-container\">I did a whoopsies.</div>;\n}\n"],
  "mappings": ";;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACAjB;AAAA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACAjB;;;ACAA;AAGA,gBAAmB;AACnB,qBAA0B;AAuCX,2BAA2B;AACxC,MAAI,OAAO;AAEX,SACE,oCAAC,OAAD,MACE,oCAAC,KAAD,MAAG,0BACH,oCAAC,KAAD,MAAI,KAAK,WAAW,UACpB,oCAAC,MAAD;AAAA,IAAM,IAAI,KAAK,WAAW;AAAA,KAAI,KAAE,KAAK,WAAW,MAAK;AAAA;AAKpD,yBAAyB;AAC9B,MAAI,SAAS;AAEb,MAAI,OAAO,WAAW,KAAK;AACzB,WACE,oCAAC,OAAD;AAAA,MAAK,WAAU;AAAA,OACb,oCAAC,KAAD,MAAG,mCACH,oCAAC,MAAD;AAAA,MAAM,IAAG;AAAA,OAAM;AAAA;AAIrB,QAAM,IAAI,MAAM,2CAA2C,OAAO;AAAA;AAG7D,uBAAuB,EAAE,SAA2B;AACzD,UAAQ,MAAM;AACd,SAAO,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAkB;AAAA;",
  "names": []
}
